#!/bin/bash

selfdir=$(readlink -f $(dirname $0))

. $selfdir/rel-common

function print_usage {
    echo "
Usage: $0 [OPTIONS] COMMAND

where OPTIONS is a combination of:
    v           add verbosity

and COMMAND is one of:
    help        print this help
    versions    print version of each component
    env         generate environment
"
}

## parse command line

verbose=0
while getopts "v" opt; do
    case $opt in
        v)  verbose=1
        ;;
        \?) print_usage
            exit 1
        ;;
    esac
done

shift $(($OPTIND-1))
cmd=$1
shift 1

case $cmd in
    versions)
        action="$selfdir/rel-versions"
    ;;
    env)
        action="print_env"
    ;;
    *)
        print_usage
        exit 1
    ;;
esac

## define actions

function get_version {
    local c=$1
    
    # try `version.txt` file
    printv "reading $c/version.txt"
    v=$(cat $c/version.txt 2>/dev/null)

    # try `getversion` executable
    if [[ -z $v ]]; then
        if [[ -e $c/getversion ]]; then
            printv "running $c/getversion"
            v=$(cd $c && ./getversion)
        else
            printv "$c/getversion not found or not executable. skipping"
        fi
    fi

    # give up
    if [[ -z $v ]]; then
        printv "could not find version number for $c"
        v="NA"
    fi

    echo $v
}

function print_env {
    for c in $components; do
        name=$(echo $c | tr -c '[:alnum:]' '_')ver
        echo export ${name}=$(get_version $c)
    done
}

## execute action

components=$(find . -maxdepth 1 -type d -not -name '.*' -printf '%f\n')
printv "components: $components"

export components
export verbose
$action $*

